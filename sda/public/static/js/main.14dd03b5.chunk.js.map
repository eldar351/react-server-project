{"version":3,"sources":["logo.svg","comp/Footer.js","comp/Header.js","comp/AllProducts.js","comp/Register.js","comp/Login.js","comp/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","Component","Header","href","id","AllProducts","Register","state","name","username","password","lastname","onChange","this","handleChange","bind","type","value","for","onClick","register","class","ev","setState","Object","defineProperty","target","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","r","json","jsonData","alert","Login","login","props","sidebarLogin","Sidebar","comp","switchComp","comp_Login","userLoggedIn","comp_Register","userChoiceComp","App","comp_Header","comp_AllProducts","comp_Sidebar","comp_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8KCezBC,gMAVX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAHAC,cCoBNC,mLAlBX,OAEHL,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,IAAIH,UAAU,cAAtB,QACAH,EAAAC,EAAAC,cAAA,MAAIK,GAAG,aAAaJ,UAAU,8BAC5BH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,aAAR,SACJN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,eAAR,YACJN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,oBAAR,yBAVSF,aCYNI,mLAVX,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,sCAJoBE,2CCuEXK,6MArEfC,MAAM,CACJC,KAAK,GACHC,SAAS,GACTC,SAAS,GACTC,SAAS,4EAKT,OACEd,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,sBACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAQa,SAAUC,KAAKC,aAAaC,KAAKF,MAAQL,KAAK,WAAWQ,KAAK,OAAOhB,UAAU,WAAWiB,MAAOJ,KAAKN,MAAME,WACpHZ,EAAAC,EAAAC,cAAA,SAAOmB,IAAI,cAAX,aAEFrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOa,SAAUC,KAAKC,aAAaC,KAAKF,MAASL,KAAK,WAAWQ,KAAK,WAAWhB,UAAU,WAAWiB,MAAOJ,KAAKN,MAAMG,WACxHb,EAAAC,EAAAC,cAAA,SAAOmB,IAAI,aAAX,aAGFrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOa,SAAUC,KAAKC,aAAaC,KAAKF,MAASL,KAAK,WAAWQ,KAAK,OAAOhB,UAAU,WAAWiB,MAAOJ,KAAKN,MAAMI,WACpHd,EAAAC,EAAAC,cAAA,SAAOmB,IAAI,aAAX,aAEFrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOa,SAAUC,KAAKC,aAAaC,KAAKF,MAASL,KAAK,OAAOQ,KAAK,OAAOhB,UAAU,WAAWiB,MAAOJ,KAAKN,MAAMC,OAChHX,EAAAC,EAAAC,cAAA,SAAOmB,IAAI,aAAX,eAGFrB,EAAAC,EAAAC,cAAA,UAASoB,QAASN,KAAKO,SAASL,KAAKF,MAAOQ,MAAM,+BAA+BL,KAAK,SAASR,KAAK,UAApG,WACKX,EAAAC,EAAAC,cAAA,KAAGsB,MAAM,wBAAT,iDAUEC,GAEXT,KAAKU,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBF,EAAGI,OAAOlB,KAAMc,EAAGI,OAAOT,2KAM3BU,MAAM,iCAAkC,CACpDC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAWrB,KAAKN,uBANzB4B,kBAScA,EAAEC,eAAlBC,WAGAC,MAAMD,4GAjESpC,aCkERsC,6MAhEfhC,MAAM,CACFE,SAAS,GACTC,SAAS,4EAOT,OACEb,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,mBACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACfH,EAAAC,EAAAC,cAAA,SAAQa,SAAUC,KAAKC,aAAaC,KAAKF,MAAQL,KAAK,WAAWQ,KAAK,OAAOhB,UAAU,WAAWiB,MAAOJ,KAAKN,MAAME,WAChHZ,EAAAC,EAAAC,cAAA,SAAOmB,IAAI,cAAX,aAEFrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAASa,SAAUC,KAAKC,aAAaC,KAAKF,MAASL,KAAK,WAAWQ,KAAK,OAAOhB,UAAU,WAAWiB,MAAOJ,KAAKN,MAAMG,WACtHb,EAAAC,EAAAC,cAAA,SAAOmB,IAAI,aAAX,aAEFrB,EAAAC,EAAAC,cAAA,UAASoB,QAASN,KAAK2B,MAAMzB,KAAKF,MAASQ,MAAM,+BAA+BL,KAAK,SAASR,KAAK,UAAnG,QACKX,EAAAC,EAAAC,cAAA,KAAGsB,MAAM,wBAAT,iDAUEC,GAEXT,KAAKU,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBF,EAAGI,OAAOlB,KAAMc,EAAGI,OAAOT,wKAKzBU,MAAM,8BAA+B,CACjDC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAWrB,KAAKN,uBANzB4B,kBAScA,EAAEC,eAAlBC,WAIAC,MAAMD,GAENxB,KAAK4B,MAAMC,gBAGbJ,MAAM,wIA5DMrC,aC2DL0C,6MAxDXpC,MAAM,CACFqC,KAAK,iFAKT,MAAoB,SAAjB/B,KAAKN,MAAMqC,KAGN/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,gCAAuBF,EAAAC,EAAAC,cAAA,UAASoB,QAASN,KAAKgC,WAAW9B,KAAKF,KAAK,SAAYb,UAAU,OAAlE,SAAvB,MACIH,EAAAC,EAAAC,cAAA,UAASoB,QAASN,KAAKgC,WAAW9B,KAAKF,KAAK,YAAab,UAAU,OAAnE,aACJH,EAAAC,EAAAC,cAAC+C,EAAD,CAAQJ,aAAc7B,KAAKkC,aAAahC,KAAKF,SAK5B,YAAjBA,KAAKN,MAAMqC,KAGX/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,gCAAuBF,EAAAC,EAAAC,cAAA,UAASoB,QAASN,KAAKgC,WAAW9B,KAAKF,KAAK,SAAYb,UAAU,OAAlE,SAAvB,MACIH,EAAAC,EAAAC,cAAA,UAASoB,QAASN,KAAKgC,WAAW9B,KAAKF,KAAK,YAAab,UAAU,OAAnE,aACJH,EAAAC,EAAAC,cAACiD,EAAD,OAOAnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,+DAWJc,KAAKU,SAAS,CAACqB,KAAK,gDAIfK,GAELpC,KAAKU,SAAS,CAACqB,KAAKK,WAlDNhD,aC0BPiD,mLApBX,OACErD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACoD,EAAD,OAGDtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACqD,EAAD,MADD,IACgBvD,EAAAC,EAAAC,cAACsD,EAAD,OAGhBxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuD,EAAD,eAbQrD,aCIEsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.14dd03b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n \n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n \n\n \n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n \n\nclass Header extends Component {\n  render() {\n    return (\n    \n <nav>\n    <div className=\"nav-wrapper\">\n      <a href=\"#\" className=\"brand-logo\">Logo</a>\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n        <li><a href=\"sass.html\">Home</a></li>\n        <li><a href=\"badges.html\">Flights</a></li>\n        <li><a href=\"collapsible.html\">JavaScript</a></li>\n      </ul>\n    </div>\n  </nav>\n \n \n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n \n\nclass AllProducts extends Component {\n  render() {\n    return (\n      <div className=\"col s8\">\n      <h1>AllProducts.....</h1>\n\n \n      </div>\n    );\n  }\n}\n\nexport default AllProducts;\n","import React, { Component } from 'react';\n \n\nclass Register extends Component {\n\nstate={\n  name:'',\n    username:'',\n    password:'',\n    lastname:''\n}\n\n\n  render() {\n    return (\n      <div>\n   <div className=\"col s12\"> \n   <h5>Register</h5>\n      <div className=\"row\">\n        <div className=\"input-field col s6\">\n          <input  onChange={this.handleChange.bind(this)}  name=\"username\" type=\"text\" className=\"validate\" value={this.state.username}    />\n          <label for=\"first_name\">Username</label>\n        </div>\n        <div className=\"input-field col s6\">\n          <input onChange={this.handleChange.bind(this)}   name=\"password\" type=\"password\" className=\"validate\" value={this.state.password}    />\n          <label for=\"last_name\">Password</label>\n        </div> \n\n        <div className=\"input-field col s6\">\n          <input onChange={this.handleChange.bind(this)}   name=\"lastname\" type=\"text\" className=\"validate\" value={this.state.lastname}    />\n          <label for=\"last_name\">lastname</label>\n        </div> \n        <div className=\"input-field col s6\">\n          <input onChange={this.handleChange.bind(this)}   name=\"name\" type=\"text\" className=\"validate\" value={this.state.name}    />\n          <label for=\"last_name\">first name</label>\n        </div> \n\n        <button  onClick={this.register.bind(this)} class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Register\n             <i class=\"material-icons right\">send</i>\n         </button>\n      </div> \n  </div>\n \n      </div>\n    );\n  }\n \n\n  handleChange(ev)\n  {\n    this.setState({ [ev.target.name]:ev.target.value })    //{username:sima} \n  }\n\n\nasync register()\n{\n    const r = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify( this.state)\n      });\n\n    let jsonData= await r.json(); \n    if(jsonData)\n    {\n        alert(jsonData)\n    }\n}\n\n}\n\nexport default Register;\n","import React, { Component } from 'react';\n \n\nclass Login extends Component {\n  \nstate={\n    username:'',\n    password:''\n}\n\n\n\n\n  render() {\n    return (\n      <div  >\n   <div className=\"col s12\"> \n   <h5>Login</h5>\n      <div className=\"row\">\n      <div className=\"input-field col s6\">\n      <input  onChange={this.handleChange.bind(this)}  name=\"username\" type=\"text\" className=\"validate\" value={this.state.username}    />\n          <label for=\"first_name\">Username</label>\n        </div>\n        <div className=\"input-field col s6\">\n          <input   onChange={this.handleChange.bind(this)}   name=\"password\" type=\"text\" className=\"validate\" value={this.state.password}/>\n          <label for=\"last_name\">Password</label>\n        </div> \n        <button  onClick={this.login.bind(this)}   class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Login\n             <i class=\"material-icons right\">send</i>\n         </button>\n      </div> \n  </div>\n \n      </div>\n    );\n  }\n\n\n  handleChange(ev)\n  {\n    this.setState({ [ev.target.name]:ev.target.value })    //{username:sima} \n  }\n\n  async login()\n  {\n      const r = await fetch('http://localhost:3000/login', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify( this.state)\n        });\n  \n      let jsonData= await r.json(); \n      \n      if(jsonData)\n      {\n          alert(jsonData);\n\n          this.props.sidebarLogin();\n      }\n      else{\n        alert('wrong username or password!');\n      }\n  }\n\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\nclass Sidebar extends Component {\n\n    state={\n        comp:\"login\"\n    }\n\n\n  render() {\n    if(this.state.comp==\"login\")\n    {\n        return (\n            <div className=\"col s4\">\n            <h5>hello guest please <button  onClick={this.switchComp.bind(this,'login')}   className=\"btn\">login</button>\n             or <button  onClick={this.switchComp.bind(this,'register')} className=\"btn\">register</button></h5>\n            <Login  sidebarLogin={this.userLoggedIn.bind(this)}   /> \n            </div>\n        );\n    }\n   \n    else if(this.state.comp==\"register\")\n    {\n        return (\n            <div className=\"col s4\">\n            <h5>hello guest please <button  onClick={this.switchComp.bind(this,'login')}   className=\"btn\">login</button>\n             or <button  onClick={this.switchComp.bind(this,'register')} className=\"btn\">register</button></h5>\n            <Register     /> \n            </div>\n        );\n    } \n    else\n    {\n        return (\n            <div className=\"col s4\">\n            <h5>connected</h5>\n            </div>\n        );\n    }\n   \n  }\n\n\n\n  userLoggedIn()\n  {\n        this.setState({comp:\"loggedin\"})\n  }\n\n\n  switchComp(userChoiceComp)\n  {\n        this.setState({comp:userChoiceComp});\n  }\n\n\n\n\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport  Footer from './comp/Footer';\nimport Header from './comp/Header';\nimport AllProducts from './comp/AllProducts';\nimport Sidebar from './comp/Sidebar';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n         <Header/> \n        </div>\n\n        <div className=\"row\">\n         <AllProducts/> <Sidebar />\n        </div> \n\n        <div className=\"row\">\n          <Footer/> \n        </div>\n\n \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}